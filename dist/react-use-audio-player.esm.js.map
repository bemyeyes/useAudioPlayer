{"version":3,"file":"react-use-audio-player.esm.js","sources":["../src/audioPlayerState.ts","../src/useHowlEventSync.ts","../src/HowlInstanceManager.ts","../src/useAudioPlayer.ts","../src/useGlobalAudioPlayer.ts"],"sourcesContent":["import { Howl } from \"howler\"\n\nexport enum ActionTypes {\n    START_LOAD = \"START_LOAD\",\n    ON_LOAD = \"ON_LOAD\",\n    ON_ERROR = \"ON_ERROR\",\n    ON_PLAY = \"ON_PLAY\",\n    ON_PAUSE = \"ON_PAUSE\",\n    ON_STOP = \"ON_STOP\",\n    ON_END = \"ON_END\",\n    ON_RATE = \"ON_RATE\",\n    ON_MUTE = \"ON_MUTE\",\n    ON_VOLUME = \"ON_VOLUME\",\n    ON_LOOP = \"ON_LOOP\"\n}\n\nexport type StartLoadAction = {\n    type: ActionTypes.START_LOAD\n    linkMediaSession?: boolean\n    howl: Howl\n}\n\n// TODO: the main state reducer should be decoupled from Howler\n// to accomplish this, each action should describe the type of change using an abstraction rather than passing in the howl\nexport type AudioEventAction = {\n    type: Exclude<ActionTypes, ActionTypes.START_LOAD | ActionTypes.ON_ERROR>\n    howl: Howl\n    toggleValue?: boolean\n    debugId?: string\n}\n\nexport type ErrorEvent = {\n    type: ActionTypes.ON_ERROR\n    message: string\n}\n\nexport type Action = StartLoadAction | AudioEventAction | ErrorEvent\n\nexport interface AudioPlayerState {\n    src: string | null\n    looping: boolean\n    isReady: boolean\n    isLoading: boolean\n    paused: boolean\n    stopped: boolean\n    playing: boolean\n    duration: number\n    muted: boolean\n    rate: number\n    volume: number\n    error: string | null\n}\n\nexport function initStateFromHowl(howl?: Howl): AudioPlayerState {\n    if (howl === undefined) {\n        return {\n            src: null,\n            isReady: false,\n            isLoading: false,\n            looping: false,\n            duration: 0,\n            rate: 1,\n            volume: 1,\n            muted: false,\n            playing: false,\n            paused: false,\n            stopped: false,\n            error: null\n        }\n    }\n\n    const position = howl.seek()\n    const playing = howl.playing()\n\n    return {\n        isReady: howl.state() === \"loaded\",\n        isLoading: howl.state() === \"loading\",\n        // @ts-ignore _src exists\n        src: howl._src,\n        looping: howl.loop(),\n        duration: howl.duration(),\n        rate: howl.rate(),\n        volume: howl.volume(),\n        muted: howl.mute(),\n        playing,\n        paused: !playing,\n        stopped: !playing && position === 0,\n        error: null\n    }\n}\n\nexport function reducer(state: AudioPlayerState, action: Action) {\n    switch (action.type) {\n        case ActionTypes.START_LOAD:\n            return {\n                // when called without a Howl object it will return an empty/init state object\n                ...initStateFromHowl(),\n                isLoading: true\n            }\n        case ActionTypes.ON_LOAD:\n            // in React 18 there is a weird race condition where ON_LOAD receives a Howl object that has been unloaded\n            // if we detect this case just return the existing state to wait for another action\n            if (action.howl.state() === \"unloaded\") {\n                return state\n            }\n            return initStateFromHowl(action.howl)\n        case ActionTypes.ON_ERROR:\n            return {\n                // this essentially resets state when called with undefined\n                ...initStateFromHowl(),\n                error: action.message\n            }\n        case ActionTypes.ON_PLAY:\n            return {\n                ...state,\n                playing: true,\n                paused: false,\n                stopped: false\n            }\n        case ActionTypes.ON_PAUSE:\n            return {\n                ...state,\n                playing: false,\n                paused: true\n            }\n        case ActionTypes.ON_STOP: {\n            return {\n                ...state,\n                playing: false,\n                paused: false,\n                stopped: true\n            }\n        }\n        case ActionTypes.ON_END: {\n            return {\n                ...state,\n                playing: state.looping,\n                stopped: !state.looping\n            }\n        }\n        case ActionTypes.ON_MUTE: {\n            return {\n                ...state,\n                muted: action.howl.mute() ?? false\n            }\n        }\n        case ActionTypes.ON_RATE: {\n            return {\n                ...state,\n                rate: action.howl?.rate() ?? 1.0\n            }\n        }\n        case ActionTypes.ON_VOLUME: {\n            return {\n                ...state,\n                volume: action.howl?.volume() ?? 1.0\n            }\n        }\n        case ActionTypes.ON_LOOP: {\n            const { toggleValue = false, howl } = action\n            howl.loop(toggleValue)\n            return {\n                ...state,\n                looping: toggleValue\n            }\n        }\n        default:\n            return state\n    }\n}\n","import {\n    Dispatch,\n    ReducerAction,\n    ReducerState,\n    useCallback,\n    useEffect,\n    useRef\n} from \"react\"\nimport {\n    Action,\n    ActionTypes,\n    AudioPlayerState,\n    reducer\n} from \"./audioPlayerState\"\nimport { HowlInstanceManager } from \"./HowlInstanceManager\"\nimport { HowlErrorCallback } from \"howler\"\n\nexport function useHowlEventSync(\n    howlManager: HowlInstanceManager,\n    [state, dispatch]: [AudioPlayerState, Dispatch<Action>]\n): [ReducerState<typeof reducer>, Dispatch<ReducerAction<typeof reducer>>] {\n    const onLoad = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_LOAD, howl })\n    }, [dispatch, howlManager])\n\n    const onError: HowlErrorCallback = useCallback(\n        (_: number, errorCode: unknown) => {\n            dispatch({\n                type: ActionTypes.ON_ERROR,\n                message: errorCode as string\n            })\n        },\n        [dispatch]\n    )\n\n    const onPlay = useCallback(() => {\n        const howl = howlManager.getHowl()\n        // TODO since this is the sync layer i should really extract the info from the howl here and pass that in with the action payload\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_PLAY, howl })\n    }, [dispatch, howlManager])\n\n    const onPause = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_PAUSE, howl })\n    }, [dispatch, howlManager])\n\n    const onEnd = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_END, howl })\n    }, [dispatch, howlManager])\n\n    const onStop = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_STOP, howl })\n    }, [dispatch, howlManager])\n\n    const onMute = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_MUTE, howl })\n    }, [dispatch, howlManager])\n\n    const onVolume = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_VOLUME, howl })\n    }, [dispatch, howlManager])\n\n    const onRate = useCallback(() => {\n        const howl = howlManager.getHowl()\n        if (howl === undefined) return\n        dispatch({ type: ActionTypes.ON_RATE, howl })\n    }, [dispatch, howlManager])\n\n    useEffect(() => {\n        return () => {\n            const howl = howlManager.getHowl()\n            // howl?.off(\"load\", onLoad)\n            howl?.off(\"loaderror\", onError)\n            howl?.off(\"playerror\", onError)\n            howl?.off(\"play\", onPlay)\n            howl?.off(\"pause\", onPause)\n            howl?.off(\"end\", onEnd)\n            howl?.off(\"stop\", onStop)\n            howl?.off(\"mute\", onMute)\n            howl?.off(\"volume\", onVolume)\n            howl?.off(\"rate\", onRate)\n        }\n    }, [])\n\n    // using ref bc we don't want identity of dispatch function to change\n    // see talk: https://youtu.be/nUzLlHFVXx0?t=1558\n    const wrappedDispatch = useRef((action: Action) => {\n        if (action.type === ActionTypes.START_LOAD) {\n            const { howl } = action\n            // set up event listening\n            howl.once(\"load\", onLoad)\n            howl.on(\"loaderror\", onError)\n            howl.on(\"playerror\", onError)\n            howl.on(\"play\", onPlay)\n            howl.on(\"pause\", onPause)\n            howl.on(\"end\", onEnd)\n            howl.on(\"stop\", onStop)\n            howl.on(\"mute\", onMute)\n            howl.on(\"volume\", onVolume)\n            howl.on(\"rate\", onRate)\n        }\n\n        dispatch(action)\n    })\n\n    return [state, wrappedDispatch.current]\n}\n","import { Howl, HowlOptions } from \"howler\"\n\nimport { AudioLoadOptions } from \"./types\"\nimport { Action, ActionTypes } from \"./audioPlayerState\"\n\nexport type AudioActionCallback = (action: Action) => void\n\nexport class HowlInstanceManager {\n    private callbacks: Map<string, AudioActionCallback> = new Map()\n    private howl: Howl | undefined = undefined\n    private options: AudioLoadOptions = {}\n    private subscriptionIndex = 0\n\n    public subscribe(cb: AudioActionCallback): string {\n        const id = (this.subscriptionIndex++).toString()\n        this.callbacks.set(id, cb)\n        return id\n    }\n\n    public unsubscribe(subscriptionId: string) {\n        this.callbacks.delete(subscriptionId)\n    }\n\n    public getHowl() {\n        return this.howl\n    }\n\n    public getNumberOfConnections() {\n        return this.callbacks.size\n    }\n\n    public createHowl(options: { src: string } & AudioLoadOptions) {\n        this.destroyHowl()\n\n        this.options = options\n        const {\n            initialVolume,\n            initialRate,\n            initialMute,\n            ...rest\n        } = this.options\n        const newHowl = new Howl({\n            mute: initialMute,\n            volume: initialVolume,\n            rate: initialRate,\n            ...rest\n        } as HowlOptions)\n\n        this.callbacks.forEach(cb =>\n            cb({ type: ActionTypes.START_LOAD, howl: newHowl })\n        )\n        this.howl = newHowl\n        return newHowl\n    }\n\n    public destroyHowl() {\n        if (this.options.onload) {\n            this.howl?.off(\"load\", this.options.onload)\n        }\n\n        if (this.options.onend) {\n            this.howl?.off(\"end\", this.options.onend)\n        }\n\n        if (this.options.onplay) {\n            this.howl?.off(\"play\", this.options.onplay)\n        }\n\n        if (this.options.onpause) {\n            this.howl?.off(\"pause\", this.options.onpause)\n        }\n\n        if (this.options.onstop) {\n            this.howl?.off(\"stop\", this.options.onstop)\n        }\n\n        this.howl?.unload()\n    }\n\n    public broadcast(action: Action) {\n        this.callbacks.forEach(cb => cb(action))\n    }\n}\n\nexport class HowlInstanceManagerSingleton {\n    private static instance: HowlInstanceManager\n\n    public static getInstance() {\n        if (this.instance === undefined) {\n            HowlInstanceManagerSingleton.instance = new HowlInstanceManager()\n        }\n\n        return HowlInstanceManagerSingleton.instance\n    }\n}\n","import { useCallback, useReducer, useRef } from \"react\"\nimport {\n    ActionTypes,\n    initStateFromHowl,\n    reducer as audioStateReducer\n} from \"./audioPlayerState\"\nimport { useHowlEventSync } from \"./useHowlEventSync\"\nimport { HowlInstanceManager } from \"./HowlInstanceManager\"\nimport { AudioPlayer, LoadArguments } from \"./types\"\n\nexport const useAudioPlayer = (): AudioPlayer & {\n    cleanup: VoidFunction,\n    getHowlManager: () => HowlInstanceManager\n} => {\n    const howlManager = useRef<HowlInstanceManager | null>(null)\n    function getHowlManager() {\n        if (howlManager.current !== null) {\n            return howlManager.current\n        }\n\n        const manager = new HowlInstanceManager()\n        howlManager.current = manager\n        return manager\n    }\n\n    const [state, dispatch] = useHowlEventSync(\n        getHowlManager(),\n        useReducer(\n            audioStateReducer,\n            getHowlManager().getHowl(),\n            initStateFromHowl\n        )\n    )\n\n    const load = useCallback((...[src, options = {}]: LoadArguments) => {\n        // TODO investigate: if we try to avoid loading the same sound (existing howl & same src in call)\n        // then there are some bugs like in the MultipleSounds demo, the \"play\" button will not switch to \"pause\"\n        const howl = getHowlManager().createHowl({\n            src,\n            ...options\n        })\n\n        dispatch({ type: ActionTypes.START_LOAD, howl })\n    }, [])\n\n    const seek = useCallback((seconds: number) => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.seek(seconds)\n    }, [])\n\n    const getPosition = useCallback(() => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return 0\n        }\n\n        return howl.seek() ?? 0\n    }, [])\n\n    const play = useCallback(() => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.play()\n    }, [])\n\n    const pause = useCallback(() => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.pause()\n    }, [])\n\n    const togglePlayPause = useCallback(() => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        if (state.playing) {\n            howl.pause()\n        } else {\n            howl.play()\n        }\n    }, [state])\n\n    const stop = useCallback(() => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.stop()\n    }, [])\n\n    const fade = useCallback((from: number, to: number, duration: number) => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.fade(from, to, duration)\n    }, [])\n\n    const setRate = useCallback((speed: number) => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.rate(speed)\n    }, [])\n\n    const setVolume = useCallback((vol: number) => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.volume(vol)\n    }, [])\n\n    const mute = useCallback((muteOnOff: boolean) => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.mute(muteOnOff)\n    }, [])\n\n    const loop = useCallback((loopOnOff: boolean) => {\n        const howl = getHowlManager().getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        // this differs from the implementation in useGlobalAudioPlayer which needs to broadcast the action to itself and all other instances of the hook\n        // maybe these two behaviors could be abstracted with one interface in the future\n        dispatch({ type: ActionTypes.ON_LOOP, howl, toggleValue: loopOnOff })\n    }, [])\n\n    const cleanup = useCallback(() => {\n        getHowlManager()?.destroyHowl()\n    }, [])\n\n    return {\n        ...state,\n        load,\n        seek,\n        getPosition,\n        play,\n        pause,\n        togglePlayPause,\n        stop,\n        mute,\n        fade,\n        setRate,\n        setVolume,\n        loop,\n        cleanup,\n        getHowlManager\n    }\n}\n","import { useCallback, useEffect, useReducer, useRef } from \"react\"\nimport {\n    Action,\n    ActionTypes,\n    initStateFromHowl,\n    reducer as audioStateReducer\n} from \"./audioPlayerState\"\nimport { useHowlEventSync } from \"./useHowlEventSync\"\nimport { HowlInstanceManagerSingleton } from \"./HowlInstanceManager\"\nimport { AudioPlayer, LoadArguments } from \"./types\"\n\nexport function useGlobalAudioPlayer(): AudioPlayer {\n    const howlManager = useRef(HowlInstanceManagerSingleton.getInstance())\n\n    const [state, dispatch] = useHowlEventSync(\n        howlManager.current,\n        useReducer(\n            audioStateReducer,\n            howlManager.current.getHowl(),\n            initStateFromHowl\n        )\n    )\n\n    useEffect(() => {\n        const howlOnMount = howlManager.current.getHowl()\n        if (howlOnMount !== undefined) {\n            dispatch({ type: ActionTypes.START_LOAD, howl: howlOnMount })\n            if (howlOnMount.state() === \"loaded\") {\n                dispatch({ type: ActionTypes.ON_LOAD, howl: howlOnMount })\n            }\n        }\n\n        function sync(action: Action) {\n            dispatch(action)\n        }\n\n        const subscriptionId = howlManager.current.subscribe(sync)\n\n        return () => {\n            howlManager.current.unsubscribe(subscriptionId)\n        }\n    }, [])\n\n    const load = useCallback((...[src, options = {}]: LoadArguments) => {\n        // the HowlInstanceManager will intercept this newly created howl and broadcast it to registered hooks\n        howlManager.current.createHowl({\n            src,\n            ...options\n        })\n    }, [])\n\n    const seek = useCallback((seconds: number) => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.seek(seconds)\n    }, [])\n\n    const getPosition = useCallback(() => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return 0\n        }\n\n        return howl.seek() ?? 0\n    }, [])\n\n    const play = useCallback(() => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.play()\n    }, [])\n\n    const pause = useCallback(() => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.pause()\n    }, [])\n\n    const togglePlayPause = useCallback(() => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        if (state.playing) {\n            howl.pause()\n        } else {\n            howl.play()\n        }\n    }, [state])\n\n    const stop = useCallback(() => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.stop()\n    }, [])\n\n    const fade = useCallback((from: number, to: number, duration: number) => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.fade(from, to, duration)\n    }, [])\n\n    const setRate = useCallback((speed: number) => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.rate(speed)\n    }, [])\n\n    const setVolume = useCallback((vol: number) => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.volume(vol)\n    }, [])\n\n    const mute = useCallback((muteOnOff: boolean) => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howl.mute(muteOnOff)\n    }, [])\n\n    const loop = useCallback((loopOnOff: boolean) => {\n        const howl = howlManager.current.getHowl()\n        if (howl === undefined) {\n            return\n        }\n\n        howlManager.current.broadcast({\n            type: ActionTypes.ON_LOOP,\n            howl,\n            toggleValue: loopOnOff\n        })\n    }, [])\n\n    return {\n        ...state,\n        load,\n        seek,\n        getPosition,\n        play,\n        pause,\n        togglePlayPause,\n        stop,\n        mute,\n        fade,\n        setRate,\n        setVolume,\n        loop\n    }\n}\n"],"names":["ActionTypes","initStateFromHowl","howl","undefined","src","isReady","isLoading","looping","duration","rate","volume","muted","playing","paused","stopped","error","position","seek","state","_src","loop","mute","reducer","action","type","START_LOAD","_extends","ON_LOAD","ON_ERROR","message","ON_PLAY","ON_PAUSE","ON_STOP","ON_END","ON_MUTE","_action$howl$mute","ON_RATE","_action$howl$rate","_action$howl","ON_VOLUME","_action$howl$volume","_action$howl2","ON_LOOP","_action$toggleValue","toggleValue","useHowlEventSync","howlManager","_ref","dispatch","onLoad","useCallback","getHowl","onError","_","errorCode","onPlay","onPause","onEnd","onStop","onMute","onVolume","onRate","useEffect","off","wrappedDispatch","useRef","once","on","current","HowlInstanceManager","callbacks","Map","options","subscriptionIndex","_proto","prototype","subscribe","cb","id","toString","set","unsubscribe","subscriptionId","getNumberOfConnections","size","createHowl","destroyHowl","_this$options","initialVolume","initialRate","initialMute","rest","_objectWithoutPropertiesLoose","_excluded","newHowl","Howl","forEach","onload","_this$howl","onend","_this$howl2","onplay","_this$howl3","onpause","_this$howl4","onstop","_this$howl5","_this$howl6","unload","broadcast","HowlInstanceManagerSingleton","getInstance","instance","useAudioPlayer","getHowlManager","manager","_useHowlEventSync","useReducer","audioStateReducer","load","_ref$","seconds","getPosition","_howl$seek","play","pause","togglePlayPause","stop","fade","from","to","setRate","speed","setVolume","vol","muteOnOff","loopOnOff","cleanup","_getHowlManager","useGlobalAudioPlayer","howlOnMount","sync"],"mappings":"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"}